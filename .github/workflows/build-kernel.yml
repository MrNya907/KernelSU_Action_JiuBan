name: Build Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          KERNEL_SOURCE=${{ env.KERNEL_SOURCE:-https://github.com/afterallafk/sinsperf_kernel_xiaomi_onclite }}
          KERNEL_SOURCE_BRANCH=${{ env.KERNEL_SOURCE_BRANCH:-12.1 }}
          KERNEL_CONFIG=${{ env.KERNEL_CONFIG:-onclite-perf_defconfig }}
          KERNEL_IMAGE_NAME=${{ env.KERNEL_IMAGE_NAME:-Image.gz-dtb }}
          ARCH=${{ env.ARCH:-arm64 }}
          EXTRA_CMDS:LD=${{ env.EXTRA_CMDS:LD:-ld.lld }}

          USE_CUSTOM_CLANG=${{ env.USE_CUSTOM_CLANG:-false }}
          CLANG_BRANCH=${{ env.CLANG_BRANCH:-master-kernel-build-2022 }}
          CLANG_VERSION=${{ env.CLANG_VERSION:-r450784d }}

          ENABLE_GCC_ARM64=${{ env.ENABLE_GCC_ARM64:-true }}
          ENABLE_GCC_ARM32=${{ env.ENABLE_GCC_ARM32:-true }}

          ENABLE_KERNELSU=${{ env.ENABLE_KERNELSU:-true }}
          KERNELSU_TAG=${{ env.KERNELSU_TAG:-main }}

          DISABLE_LTO=${{ env.DISABLE_LTO:-false }}
          DISABLE_CC_WERROR=${{ env.DISABLE_CC_WERROR:-false }}
          ADD_KPROBES_CONFIG=${{ env.ADD_KPROBES_CONFIG:-true }}
          ADD_OVERLAYFS_CONFIG=${{ env.ADD_OVERLAYFS_CONFIG:-true }}

          ENABLE_CCACHE=${{ env.ENABLE_CCACHE:-true }}

          NEED_DTBO=${{ env.NEED_DTBO:-false }}

          BUILD_BOOT_IMG=${{ env.BUILD_BOOT_IMG:-true }}
          SOURCE_BOOT_IMAGE=${{ env.SOURCE_BOOT_IMAGE:-https://raw.githubusercontent.com/H3XDaemon/KernelSU_Action/main/boot/boot.img }}

      - name: Build Kernel
        run: |
          # Add build commands here using the environment variables
          # Example: make KERNEL_CONFIG=${KERNEL_CONFIG} ARCH=${ARCH}
